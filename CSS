import React, { useState } from "react";

export default function App() {
  const [mealInput, setMealInput] = useState("");
  const [loading, setLoading] = useState(false);
  const [analysis, setAnalysis] = useState(null);
  const [error, setError] = useState(null);

  const handleAnalyze = async () => {
    if (mealInput.trim() === "") {
      setError("Please enter your meal description.");
      return;
    }
    setLoading(true);
    setError(null);
    setAnalysis(null);
    try {
      const res = await fetch("http://localhost:5000/api/analyze", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ meal: mealInput }),
      });
      if (!res.ok) throw new Error("Failed to get nutrition data");
      const data = await res.json();
      setAnalysis(data);
    } catch (e) {
      setError("Error analyzing the meal. Please try again.");
    } finally {
      setLoading(false);
    }
  };

  return (
    <div style={styles.wrapper}>
      <h1 style={styles.title}>AI-Powered Nutrition Advisor</h1>

      <textarea
        style={styles.textarea}
        rows={5}
        placeholder="Describe your meal, e.g. 2 eggs, 1 cup rice, 1 apple"
        value={mealInput}
        onChange={(e) => setMealInput(e.target.value)}
        disabled={loading}
      />

      <button
        onClick={handleAnalyze}
        disabled={loading}
        style={{
          ...styles.button,
          backgroundColor: loading ? "#9087a1" : "#6c5b7b",
          cursor: loading ? "not-allowed" : "pointer",
          transform: loading ? "scale(1)" : "scale(1.02)",
          transition: "all 0.2s ease",
        }}
        onMouseEnter={(e) => {
          if (!loading) e.target.style.backgroundColor = "#805a9f";
        }}
        onMouseLeave={(e) => {
          if (!loading) e.target.style.backgroundColor = "#6c5b7b";
        }}
      >
        {loading ? "Analyzing..." : "Analyze Meal"}
      </button>

      {error && <div style={styles.error}>{error}</div>}

      {analysis && (
        <section style={styles.result}>
          <h2 style={{ marginBottom: 12, borderBottom: "1px solid #ddd", paddingBottom: 6 }}>
            Nutrition Analysis
          </h2>
          <div style={styles.nutritionGrid}>
            <div><strong>Calories</strong><p>{analysis.calories} kcal</p></div>
            <div><strong>Protein</strong><p>{analysis.protein} g</p></div>
            <div><strong>Carbohydrates</strong><p>{analysis.carbs} g</p></div>
            <div><strong>Fat</strong><p>{analysis.fat} g</p></div>
          </div>

          <div style={{ marginTop: 16 }}>
            <strong>Suggestions:</strong>
            <ul style={styles.suggestionsList}>
              {analysis.suggestions.split(". ").map((s, i) => s && <li key={i}>{s.trim()}</li>)}
            </ul>
          </div>
        </section>
      )}

      <footer style={styles.footer}>
        Built with ❤️ by [Your Name] | {new Date().getFullYear()}
      </footer>
    </div>
  );
}

const styles = {
  wrapper: {
    maxWidth: 520,
    margin: "40px auto",
    padding: 24,
    backgroundColor: "#f9f9fc",
    borderRadius: 14,
    boxShadow: "0 6px 15px rgba(109, 100, 138, 0.15)",
    fontFamily: "'Segoe UI', Tahoma, Geneva, Verdana, sans-serif",
    color: "#333",
  },
  title: {
    textAlign: "center",
    color: "#492970",
    fontWeight: "700",
    fontSize: "1.9rem",
    marginBottom: 22,
  },
  textarea: {
    width: "100%",
    padding: 14,
    fontSize: 17,
    borderRadius: 8,
    border: "2px solid #aaa",
    resize: "vertical",
    fontFamily: "inherit",
    transition: "border-color 0.3s",
    outline: "none",
    marginBottom: 16,
  },
  button: {
    width: "100%",
    padding: 14,
    fontWeight: "700",
    fontSize: 18,
    color: "#fff",
    borderRadius: 8,
    border: "none",
    userSelect: "none",
  },
  error: {
    marginTop: 16,
    padding: 12,
    backgroundColor: "#fce4e4",
    color: "#cc2525",
    borderRadius: 6,
    fontWeight: "600",
  },
  result: {
    backgroundColor: "#fff",
    padding: 24,
    borderRadius: 10,
    marginTop: 26,
    boxShadow: "0 3px 9px rgba(107, 99, 131, 0.13)",
  },
  nutritionGrid: {
    display: "grid",
    gridTemplateColumns: "repeat(auto-fit,minmax(100px,1fr))",
    gap: 18,
    fontSize: 16,
  },
  suggestionsList: {
    marginTop: 8,
    paddingLeft: 20,
    color: "#4a4a4a",
  },
  footer: {
    marginTop: 40,
    fontSize: 14,
    textAlign: "center",
    color: "#999",
    userSelect: "none",
  },
};
