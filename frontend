import React, { useState } from "react";

export default function Frontend() {
  const [mealInput, setMealInput] = useState("");
  const [loading, setLoading] = useState(false);
  const [analysis, setAnalysis] = useState(null);
  const [error, setError] = useState(null);

  const handleAnalyze = async () => {
    if (mealInput.trim() === "") {
      setError("Please enter your meal description.");
      return;
    }
    setLoading(true);
    setError(null);
    setAnalysis(null);
    try {
      const res = await fetch("http://localhost:5000/api/analyze", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ meal: mealInput }),
      });
      if (!res.ok) throw new Error("Failed to get nutrition data");
      const data = await res.json();
      setAnalysis(data);
    } catch (e) {
      setError("Error analyzing the meal. Please try again.");
    } finally {
      setLoading(false);
    }
  };

  return (
    <div style={styles.container}>
      <h1 style={styles.header}>AI-Powered Nutrition Advisor</h1>

      <textarea
        style={styles.textarea}
        rows={5}
        placeholder="Enter your meal (e.g., 2 eggs, 1 cup rice, 1 apple)..."
        value={mealInput}
        onChange={(e) => setMealInput(e.target.value)}
      />

      <button
        onClick={handleAnalyze}
        disabled={loading}
        style={{ ...styles.button, opacity: loading ? 0.6 : 1 }}
      >
        {loading ? "Analyzing..." : "Analyze Meal"}
      </button>

      {error && <div style={styles.error}>{error}</div>}

      {analysis && (
        <div style={styles.resultContainer}>
          <h2>Nutrition Analysis</h2>
          <div style={styles.nutritionRow}>
            <span>Calories:</span>
            <span>{analysis.calories} kcal</span>
          </div>
          <div style={styles.nutritionRow}>
            <span>Protein:</span>
            <span>{analysis.protein} g</span>
          </div>
          <div style={styles.nutritionRow}>
            <span>Carbohydrates:</span>
            <span>{analysis.carbs} g</span>
          </div>
          <div style={styles.nutritionRow}>
            <span>Fat:</span>
            <span>{analysis.fat} g</span>
          </div>

          <div style={{ marginTop: 12 }}>
            <strong>Suggestions:</strong>
            <ul>
              {analysis.suggestions
                .split(". ")
                .filter((s) => s.trim() !== "")
                .map((suggestion, idx) => (
                  <li key={idx}>{suggestion.trim()}</li>
                ))}
            </ul>
          </div>
        </div>
      )}

      <footer style={styles.footer}>
        Built with ❤️ by [Your Name] | {new Date().getFullYear()}
      </footer>
    </div>
  );
}

const styles = {
  container: {
    maxWidth: 500,
    margin: "40px auto",
    padding: 24,
    fontFamily: `"Segoe UI", Tahoma, Geneva, Verdana, sans-serif`,
    backgroundColor: "#fafafa",
    boxShadow: "0 2px 8px rgba(0,0,0,0.1)",
    borderRadius: 10,
  },
  header: {
    textAlign: "center",
    color: "#34495e",
    marginBottom: 20,
  },
  textarea: {
    width: "100%",
    borderRadius: 6,
    borderColor: "#ccc",
    fontSize: 16,
    padding: 12,
    boxSizing: "border-box",
    resize: "vertical",
    fontFamily: "inherit",
  },
  button: {
    marginTop: 16,
    width: "100%",
    padding: 14,
    backgroundColor: "#6c5b7b",
    border: "none",
    borderRadius: 6,
    color: "white",
    fontWeight: "600",
    fontSize: 16,
    cursor: "pointer",
    transition: "background-color 0.3s",
  },
  error: {
    marginTop: 18,
    padding: 12,
    backgroundColor: "#ffe6e6",
    borderRadius: 6,
    color: "#cc0000",
    fontWeight: "600",
  },
  resultContainer: {
    backgroundColor: "white",
    padding: 20,
    marginTop: 24,
    borderRadius: 8,
    boxShadow: "0 1px 6px rgba(0,0,0,0.1)",
  },
  nutritionRow: {
    display: "flex",
    justifyContent: "space-between",
    marginBottom: 8,
    fontSize: 16,
    color: "#333",
    fontWeight: "500",
  },
  footer: {
    marginTop: 40,
    fontSize: 13,
    color: "#999",
    textAlign: "center",
  },
};
